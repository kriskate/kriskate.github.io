{"version":3,"sources":["components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","constants/TodoFilters.js","reducers/todos.js","components/TodoItem.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Header","_ref","addTodo","react_default","a","createElement","className","href","COMPLETE_TODO","RESET","text","type","completeTodo","id","types","setVisibilityFilter","filter","reset","connect","Link","active","children","setFilter","classnames","selected","style","cursor","onClick","state","ownProps","visibilityFilter","dispatch","FILTER_TITLES","_FILTER_TITLES","Object","defineProperty","Footer","props","activeCount","itemWord","keys","map","key","FilterLink","getIDX","todo","initialState","indexOf","find","t","completed","TodoItem","_this$props","this","element","checked","onChange","Component","UL","filteredTodos","actions","TodoItem_TodoItem","assign","TodoList","_ref2","TodoList_UL","getTodos","todos","getVisibleTodos","createSelector","Error","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","completedCount","containers_VisibleTodoList","components_Footer","length","App","containers_Header","containers_MainSection","arguments","undefined","action","rootReducer","combineReducers","objectSpread","persistedReducer","persistReducer","storage","reducer","store","createStore","persistStore","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.fcb1f38c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1><a href=\"https://www.reddit.com/user/D2cookie\">/r/D2cookie</a> last hit challenges</h1>\n    <div>\n      <p>All the challanges are done in lobby games, no cheats, no bots, 1v0</p>\n      <p>YES, they are all possible, just hard</p>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default Header\n","export const ADD_TODO = 'ADD_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n\nexport const RESET = 'RESET'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = text => ({ type: types.ADD_TODO, text })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter})\n\nexport const reset = () => ({ type: types.RESET })\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { addTodo } from '../actions'\n\nexport default connect(null, { addTodo })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, reset } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      <button className=\"clear-completed\" onClick={reset}>Reset ALL challenges</button>\n        \n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n}\n\nexport default Footer\n","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import {\n  COMPLETE_TODO, RESET,\n} from '../constants/ActionTypes'\n\nexport const types = {\n  EASY: 'Easy',\n  ADVANCED: 'Advanced',\n  SUPERADVANCED: 'Super Advanced',\n}\n\nexport const getIDX = (todo) => {\n  return initialState.indexOf(initialState.find(t => t.type === todo.type && t.text === todo.text))\n}\nexport const initialState = [\n  {\n    type: types.EASY,\n    text: '1. 10 min - no creeps missed (80+ lasthits minimum)',\n    completed: false,\n    id: 1\n  },\n  {\n    type: types.EASY,\n    text: `2. 10 min - 80 LH / 40 denies safelane.\nCreeps can't enter either team's tower. if they do you reset`,\n    completed: false,\n    id: 2\n  },\n  {\n    type: types.EASY,\n    text: '3. 10 min - 100 LH',\n    completed: false,\n    id: 3\n  },\n  {\n    type: types.EASY,\n    text: '4. 30 min - 600 LH',\n    completed: false,\n    id: 4\n  },\n  {\n    type: types.EASY,\n    text: '5. less than 10 min - end the game (destroy enemy ancient)',\n    completed: false,\n    id: 5\n  },\n  {\n    type: types.EASY,\n    text: '6. 3000+ score in last hit trainer',\n    completed: false,\n    id: 6\n  },\n\n\n  {\n    type: types.ADVANCED,\n    text: '1. 10 min - 120 LH',\n    completed: false,\n    id: 7\n  },\n  {\n    type: types.ADVANCED,\n    text: `2. 30 min - 900 LH\n  No meepo.`,\n    completed: false,\n    id: 8\n  },\n  {\n    type: types.ADVANCED,\n    text: `3. 10 min - 100+ CS (LH+DN counts) as morphling\n  -> lvl 1 strength morph and never level anything again, turn it on and don't turn it off.\n  Buy a branch, a faerie and a wraith band.\n  You'll constantly have only ~25 damage.`,\n    completed: false,\n    id: 9\n  },\n  {\n    type: types.ADVANCED,\n    text: '4. less than 8 min - end the game (destroy enemy ancient)',\n    completed: false,\n    id: 10\n  },\n  {\n    type: types.ADVANCED,\n    text: '5. 3500+ score in last hit trainer',\n    completed: false,\n    id: 11\n  },\n\n\n  {\n    type: types.SUPERADVANCED,\n    text: \"1. 10 min - 170 LH\",\n    completed: false,\n    id: 12\n  },\n  {\n    type: types.SUPERADVANCED,\n    text: \"2. 30 min - 1300 LH\",\n    completed: false,\n    id: 13\n  },\n  {\n    type: types.SUPERADVANCED,\n    text: `3. 10 min - 120+ CS (LH+DN counts) as morphling\n  -> lvl 1 strength morph and never level anything again, turn it on and don't turn it off. \n  Buy a branch, a faerie and a wraith band.\n  You'll constantly have only ~25 damage.`,\n    completed: false,\n    id: 14\n  },\n  {\n    type: types.SUPERADVANCED,\n    text: \"4. less than 6 min - end the game (destroy enemy ancient)\",\n    completed: false,\n    id: 15\n  },\n  {\n    type: types.SUPERADVANCED,\n    text: `5. 3600 score in last hit trainer, 2 times in a row.\nNo tiny, shaman, tree.`,\n    completed: false,\n    id: 16\n  },\n]\n\n\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case RESET:\n      return initialState\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        getIDX(todo) === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    default:\n      return state\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { getIDX } from '../reducers/todos';\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { todo, completeTodo } = this.props\n\n    let element = (\n      <div className=\"view\">\n        <input className=\"toggle\"\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => completeTodo(getIDX(todo))} />\n        <label>\n          {todo.text}\n        </label>\n      </div>\n    )\n\n    return (\n      <li className={classnames({\n        completed: todo.completed,\n      })}>\n        {element}\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\nimport { types, getIDX } from '../reducers/todos';\n\nconst UL = ({ type, filteredTodos, actions }) => (\n  <div>\n    <div className=\"view-type\">\n      {type}\n    </div>\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => todo.type !== type ? null :\n        <TodoItem key={getIDX(todo)} todo={todo} {...actions} />\n      )}\n    </ul>\n  </div>\n)\nconst TodoList = ({ filteredTodos, actions }) => (\n  <div>\n    <UL type={types.EASY} filteredTodos={filteredTodos} actions={actions} />\n    <UL type={types.ADVANCED} filteredTodos={filteredTodos} actions={actions} />\n    <UL type={types.SUPERADVANCED} filteredTodos={filteredTodos} actions={actions} />\n  </div>\n)\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodoList from '../components/TodoList'\nimport { getVisibleTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          reset={actions.reset}\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n        />\n      }\n    </section>\n  )\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport reducer from './reducers'\nimport './index.css'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst persistedReducer = persistReducer(\n  {key: 'todos', storage},\n  reducer\n)\nconst store = createStore(persistedReducer)\n// eslint-disable-next-line\nconst persistor = persistStore(store)\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}